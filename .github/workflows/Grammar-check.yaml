name: Grammar Check for LaTeX

on:
  push:
    paths:
      - 'Texstuff/**/*.tex'
  pull_request:
    paths:
      - 'Texstuff/**/*.tex'

jobs:
  spell-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Aspell and Dictionaries
      run: |
        sudo apt-get update
        sudo apt-get install -y aspell aspell-it aspell-en

    - name: Spell Check for LaTeX Files
      id: spell-check
      run: |
        # Create temporary files for storing errors
        TMP_FILE=$(mktemp)
        UNRECOGNIZED_WORDS_FILE="unrecognized_words.txt"
        ERRORS_IN_ENGLISH_FILE="errors_in_english.txt"
        
        # Initialize files
        > $UNRECOGNIZED_WORDS_FILE
        > $ERRORS_IN_ENGLISH_FILE

        # Process all .tex files in the specified folder
        for file in $(find Texstuff -name "*.tex"); do
          echo "Processing $file..."

          # Remove LaTeX commands before running spell check
          sed 's/\\[a-zA-Z]*//g' "$file" | \
          aspell --lang=it list >> $TMP_FILE
        done

        # Save unrecognized words and check against the English dictionary
        if [ -s "$TMP_FILE" ]; then
          sort -u "$TMP_FILE" > $UNRECOGNIZED_WORDS_FILE
          sort -u "$TMP_FILE" | aspell --lang=en list > $ERRORS_IN_ENGLISH_FILE
        fi

        # Export results for later steps
        echo "unrecognized_words=$(cat $UNRECOGNIZED_WORDS_FILE)" >> $GITHUB_ENV
        echo "errors_in_english=$(cat $ERRORS_IN_ENGLISH_FILE)" >> $GITHUB_ENV

        # Fail if any errors were found
        if [ -s "$UNRECOGNIZED_WORDS_FILE" ] || [ -s "$ERRORS_IN_ENGLISH_FILE" ]; then
          echo "Errors found in Italian or English. Failing job."
          exit 1
        else
          echo "No errors found."
        fi

    - name: Create Comment on Pull Request
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const unrecognizedWordsPath = 'unrecognized_words.txt';
          const errorsInEnglishPath = 'errors_in_english.txt';
          
          let commentBody = '';

          if (fs.existsSync(unrecognizedWordsPath)) {
            const unrecognizedWords = fs.readFileSync(unrecognizedWordsPath, 'utf8');
            if (unrecognizedWords.trim().length > 0) {
              commentBody += '### Errors in Italian/Unrecognized words:\n```\n' + unrecognizedWords + '\n```\n';
            }
          }

          if (fs.existsSync(errorsInEnglishPath)) {
            const errorsInEnglish = fs.readFileSync(errorsInEnglishPath, 'utf8');
            if (errorsInEnglish.trim().length > 0) {
              commentBody += '### Errors in English:\n```\n' + errorsInEnglish + '\n```\n';
            }
          }

          if (commentBody) {
            commentBody = '## Grammar Check Results\n' + commentBody;
            await github.rest.issues.createComment({
              ...context.issue,
              body: commentBody
            });
          } else {
            console.log('No errors found; no comment will be posted.');
          }
