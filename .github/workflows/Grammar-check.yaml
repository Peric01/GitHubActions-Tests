name: Grammar Check for LaTeX

on:
  push:
    paths:
      - '**/*.tex'
  pull_request:
    paths:
      - '**/*.tex'

jobs:
  spell-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Textidote and Dependencies
      run: |
        # Install dependencies for Textidote
        sudo apt-get update
        sudo apt-get install -y wget unzip

        # Download Textidote .deb package
        wget https://github.com/sylvainhalle/textidote/releases/download/v0.8.3/textidote_0.8.3_all.deb

        # Install Textidote using the .deb package
        sudo dpkg -i textidote_0.8.3_all.deb
        sudo apt-get install -f  # Install missing dependencies (if any)

    - name: Check if Textidote is installed
      run: |
        # Check Textidote version to confirm installation
        textidote --version

    - name: Grammar and Spell Check for LaTeX Files
      run: |
        # Process all .tex files and run Textidote for Italian and English
        for file in $(find . -name "*.tex"); do
          echo "Processing $file..."

          # Run Textidote with Italian as the language and capture errors
          result=$(textidote check --language=it --latex $file --verbose 2>&1)
          
          # If errors are found, print the errors
          if [[ $result == *"ERROR"* ]]; then
            echo "Errors found in $file:"
            echo "$result" | tee -a textidote_errors.log
          else
            echo "No grammatical errors in $file"
          fi

          # Run Textidote for English as a fallback, if no errors were found in Italian
          if [[ $result != *"ERROR"* ]]; then
            result_en=$(textidote check --language=en --latex $file --verbose 2>&1)
            if [[ $result_en == *"ERROR"* ]]; then
              echo "Errors found in $file (English):"
              echo "$result_en" | tee -a textidote_errors.log
            else
              echo "No grammatical errors in English for $file"
            fi
          fi
        done
