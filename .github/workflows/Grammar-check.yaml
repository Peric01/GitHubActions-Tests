name: Grammar Check for LaTeX

on:
  push:
    paths:
      - 'Texstuff/**/*.tex'
  pull_request:
    paths:
      - 'Texstuff/**/*.tex'

jobs:
  spell-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Aspell and Dictionaries
      run: |
        sudo apt-get update
        sudo apt-get install -y aspell aspell-it aspell-en

    - name: Spell Check for LaTeX Files
      run: |
        # Create a temporary file for unrecognized words
        TMP_FILE=$(mktemp)

        # Process all .tex files in the specified folder
        for file in $(find Texstuff -name "*.tex"); do
          echo "Processing $file..."

          # Remove LaTeX commands before running spell check
          sed 's/\\[a-zA-Z]*//g' "$file" | \
          aspell --lang=it list >> $TMP_FILE
        done

        echo "Checking unrecognized words in English..."
        # Check the unrecognized words against the English dictionary
        if [ -s "$TMP_FILE" ]; then
          echo "Unrecognized words found:"
          sort -u "$TMP_FILE" | tee unrecognized_words.txt
          # Run English spell check
          sort -u "$TMP_FILE" | aspell --lang=en list | tee errors_in_english.txt

          # If there are any errors, fail the job
          if [ -s errors_in_english.txt ]; then
            echo "Errors found in English or Italian. Failing job."
            cat errors_in_english.txt
            exit 1
          fi
        else
          echo "No unrecognized words found."
        fi

    - name: Create Comment on Pull Request
      if: ${{ github.event_name == 'pull_request' && (env.UNRECOGNIZED_WORDS > 0 || env.ERRORS_IN_ENGLISH > 0) }}
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const unrecognizedWordsPath = 'unrecognized_words.txt';
          const errorsInEnglishPath = 'errors_in_english.txt';

          let commentBody = '## Grammar Check Results\n';

          if (fs.existsSync(unrecognizedWordsPath) && fs.readFileSync(unrecognizedWordsPath, 'utf8').trim()) {
            commentBody += '### Errors in Italian/Unrecognized words:\n```\n' + fs.readFileSync(unrecognizedWordsPath, 'utf8') + '\n```\n';
          }

          if (fs.existsSync(errorsInEnglishPath) && fs.readFileSync(errorsInEnglishPath, 'utf8').trim()) {
            commentBody += '### Errors in English:\n```\n' + fs.readFileSync(errorsInEnglishPath, 'utf8') + '\n```\n';
          }

          const { data } = await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            body: commentBody,
            headers: {
              'Authorization': `token ${{ secrets.GH_TOKEN }}`
            }
          });
          
          // Pass a flag to indicate a comment was created
          core.setOutput('commented', true);

    - name: Fail Pull Request if Errors Found
      if: ${{ github.event_name == 'pull_request' && steps.create-comment.outputs.commented == 'true' }}
      run: |
        echo "Found errors in the pull request. Failing job."
        exit 1
